package com.malwareslayer.main.engine

import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.response.*

import io.ktor.util.*

@KtorDsl
class KeyMiddlewareConfig {
    public var pin: String? = null

    public fun set(value: String) {
        pin = value
    }
}

public val KeyMiddleware: RouteScopedPlugin<KeyMiddlewareConfig> = createRouteScopedPlugin("KeyMiddleware", ::KeyMiddlewareConfig) {
    onCallReceive { call, _ ->
        if (!call.request.headers.contains("X-API-PIN")) {
            call.respond(HttpStatusCode.Unauthorized, "Unauthorized: Missing X-API-PIN")
        }

        if (call.request.headers["X-API-PIN"] != this.pluginConfig.pin) {
            call.respond(HttpStatusCode.Unauthorized, "Unauthorized: Invalid API PIN")
        }
    }
}