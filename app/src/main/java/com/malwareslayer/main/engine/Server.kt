package com.malwareslayer.main.engine

import java.net.NetworkInterface

import android.app.PendingIntent

import android.widget.TextView

import android.telephony.SmsManager

import io.ktor.server.engine.*
import io.ktor.server.netty.*
import java.net.Inet4Address


class Server(private val manager: SmsManager, private val viewer: TextView,
             private val sent: PendingIntent, private val delivered: PendingIntent) {

    private var engine: ApplicationEngine
    private var random: String = (1..4).map { ('0'..'9').random() }.joinToString("")

    private lateinit var ipv4: Inet4Address

    init {
        for (device in NetworkInterface.getNetworkInterfaces()) {
            val addresses = device.inetAddresses

            for (address in addresses) {
                if (address is Inet4Address && !address.isLoopbackAddress && address.isSiteLocalAddress) {
                    ipv4 = address

                    break
                }
            }
        }

        engine = embeddedServer(factory = Netty, port = 8080) {
            setup(random, manager, viewer, sent, delivered)
        }

        viewer.append("Setup Server [${ipv4.hostAddress}:${engine.environment.connectors.first().port}]\n")
        viewer.append("PIN: $random\n")
    }

    public fun start(wait: Boolean): ApplicationEngine {
        viewer.append("Start Server...\n\n")

        return engine.start(wait = wait)
    }

    public fun stop(gracePeriodMillis: Long = 500, timeoutMillis: Long = 500) {
        viewer.append("Stop Server...\n")

        engine.stop(gracePeriodMillis, timeoutMillis)
    }
}