package com.malwareslayer.main.engine

import io.ktor.http.*
import io.ktor.server.application.*
import io.ktor.server.response.*

import io.ktor.util.*
import kotlinx.serialization.encodeToString
import kotlinx.serialization.json.Json

@KtorDsl
class KeyMiddlewareConfig {
    var pin: String? = null

    fun set(value: String) {
        pin = value
    }
}

val KeyMiddleware: RouteScopedPlugin<KeyMiddlewareConfig> = createRouteScopedPlugin("KeyMiddleware", ::KeyMiddlewareConfig) {
    onCallReceive { call ->
        val key: AttributeKey<String> = AttributeKey("error")
        val error = Error(401, "")

        if (!call.request.headers.contains("X-API-PIN")) {
            error.message = "Unauthorized: Missing X-API-PIN"
        } else {
            if (call.request.headers["X-API-PIN"] != this.pluginConfig.pin) {
                error.message = "Unauthorized: Invalid API PIN"
            }
        }

        call.attributes.put(key, Json.encodeToString(error))
    }
}